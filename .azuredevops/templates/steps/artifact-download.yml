parameters:
# assumption componentName and pipeline name the same
- name: componentName
  type: string
  default: ''
- name: pipelineId
  type: string
  default: ''
- name: useDefaultBranch
  type: boolean
  default: true
- name: latestFromBranch
  type: boolean
  default: true
- name: extractToMnt
  type: boolean
  default: false
- name: fileFilter
  type: string
  default: ''
- name: defaultBranchList
  type: object
  default:
    AMDMIGraphX: develop
    amdsmi: develop
    aomp-extras: aomp-dev
    aomp: aomp-dev
    clr: develop
    composable_kernel: develop
    half: rocm
    HIP: develop
    hipBLAS: develop
    hipBLASLt: develop
    hipCUB: develop
    hipFFT: develop
    hipfort: develop
    HIPIFY: amd-staging
    hipRAND: develop
    hipSOLVER: develop
    hipSPARSE: develop
    hipSPARSELt: develop
    hipTensor: develop
    llvm-project: amd-staging
    MIOpen: develop
    MIVisionX: develop
    rccl: develop
    rdc: develop
    rocAL: develop
    rocALUTION: develop
    rocBLAS: develop
    ROCdbgapi : amd-staging
    rocDecode: develop
    rocFFT: develop
    ROCgdb: amd-staging
    rocm-cmake: develop
    rocm-core: master
    rocm-examples: develop
    rocminfo: amd-staging
    rocMLIR: develop
    ROCmValidationSuite: master
    rocm_bandwidth_test: master
    rocm_smi_lib: develop
    rocPRIM: develop
    rocprofiler-register: amd-mainline
    rocprofiler: amd-master
    ROCR-Runtime: master
    rocRAND: develop
    rocr_debug_agent: amd-staging
    rocSOLVER: develop
    rocSPARSE: develop
    ROCT-Thunk-Interface: master
    rocThrust: develop
    roctracer: amd-master
    rocWMMA: develop
    rpp: master
# BELOW REQUIRED IF useDefaultBranch false
- name: branchName
  type: string
  default: '$(Build.SourceBranchName)' # for tagged builds

steps:
- task: DownloadPipelineArtifact@2
  displayName: Download ${{ parameters.componentName }}
  inputs:
    buildType: 'specific'
    project: ROCm-CI
    definition: ${{ parameters.pipelineId }}
    specificBuildWithTriggering: true
    itemPattern: '**/*${{ parameters.fileFilter }}*'
    ${{ if eq(parameters.latestFromBranch, true) }}:
      ${{ if notIn(parameters.componentName, 'aomp', 'clr', 'rocMLIR') }}: # remove this once these pipelines are functional + up-to-date
        buildVersionToDownload: latestFromBranch # default is 'latest'
    ${{ if eq(parameters.useDefaultBranch, true) }}:
      branchName: refs/heads/${{ parameters.defaultBranchList[parameters.componentName] }}
    ${{ else }}:
      branchName: ${{ parameters.branchName }}
    ${{ if in(parameters.componentName, 'rocm-cmake') }}:
      allowPartiallySucceededBuilds: true
    targetPath: '$(Pipeline.Workspace)/d'
- task: ExtractFiles@1
  displayName: Extract ${{ parameters.componentName }}
  inputs:
    archiveFilePatterns: '$(Pipeline.Workspace)/d/**/*.tar.gz'
    ${{ if parameters.extractToMnt }}:
      destinationFolder: '/mnt/rocm'
    ${{ else }}:
      destinationFolder: '$(Agent.BuildDirectory)/rocm'
    cleanDestinationFolder: false
    overwriteExistingFiles: true
- task: DeleteFiles@1
  displayName: Cleanup Compressed ${{ parameters.componentName }}
  inputs:
    SourceFolder: '$(Pipeline.Workspace)/d'
    Contents: '**/*.tar.gz'
    RemoveDotFiles: true
